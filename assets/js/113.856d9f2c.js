(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{428:function(t,s,a){"use strict";a.r(s);var r=a(10),n=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"v2ray-配置格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v2ray-配置格式"}},[t._v("#")]),t._v(" V2Ray 配置格式")]),t._v(" "),s("p",[t._v("V2Ray 的配置文件为 JSON 格式，Shadowsocks 的配置也是 JSON 格式，但是 V2Ray 由于支持许多功能不可避免导致配置相对复杂一些。因此在实际配置前建议还是了解一下 JSON 的格式。\n关于 JSON 的格式，可以看 "),s("a",{attrs:{href:"https://www.v2fly.org/v5/config/overview.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("V2Ray 文档"),s("OutboundLink")],1),t._v("，里面的介绍简单明了，只是配置一下 V2Ray 只看这里足够了（我在 Google 上搜索关于 JSON 的文章比较啰嗦，估计是给程序员看的，咱没必要弄的晕头转向的。另外针对文档的介绍我认为还要补充几点：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("JSON 所有标点符号都要用半角符号（英文符号）")])]),t._v(" "),s("li",[s("p",[t._v("所有字符串都要加双引号 "),s("code",[t._v('" "')]),t._v("，键是字符串，所以键也要加双引号，数字不用加双引号")])]),t._v(" "),s("li",[s("p",[t._v("布尔类型也不用加双引号，布尔值只有两个就是 true 和 false，意思就是真（是）和假（否）")])]),t._v(" "),s("li",[s("p",[t._v("对象没有顺序，即大括号 "),s("code",[t._v("{ }")]),t._v(" 括起来的内容顺序是怎么样都没关系，如")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ip"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8.8.8.8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"isDNS"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ip"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8.8.8.8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"isDNS"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上面两个 JSON 实际上是等效的")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);